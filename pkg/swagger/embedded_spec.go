// Code generated by go-swagger; DO NOT EDIT.

package swagger

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "API for todo.antrwdev.ru.",
    "title": "TODO API",
    "version": "1.0.0"
  },
  "host": "todo.antrwdev.ru",
  "basePath": "/",
  "paths": {
    "/auth/login": {
      "post": {
        "description": "Login by email and password",
        "parameters": [
          {
            "name": "user data",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "$ref": "#/definitions/LoginSuccess"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "description": "Register new user",
        "parameters": [
          {
            "description": "user data",
            "name": "register",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User was created"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get a list of tasks for current user",
        "produces": [
          "application/json"
        ],
        "summary": "Return a list of tasks",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Create task",
        "parameters": [
          {
            "name": "create_task",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "title",
                "description"
              ],
              "properties": {
                "description": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Task was created"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get task by id",
        "produces": [
          "application/json"
        ],
        "summary": "Return task by id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete task by id",
        "responses": {
          "204": {
            "description": "Task was deleted"
          },
          "404": {
            "description": "Task was not found",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update task by id",
        "parameters": [
          {
            "name": "update_task",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "title",
                "description"
              ],
              "properties": {
                "description": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Task was updated",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "Task was not found",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "minimum": 1,
          "type": "string",
          "description": "The user ID.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "LoginSuccess": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-timr"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "password": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "API for todo.antrwdev.ru.",
    "title": "TODO API",
    "version": "1.0.0"
  },
  "host": "todo.antrwdev.ru",
  "basePath": "/",
  "paths": {
    "/auth/login": {
      "post": {
        "description": "Login by email and password",
        "parameters": [
          {
            "name": "user data",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "$ref": "#/definitions/LoginSuccess"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "description": "Register new user",
        "parameters": [
          {
            "description": "user data",
            "name": "register",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User was created"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get a list of tasks for current user",
        "produces": [
          "application/json"
        ],
        "summary": "Return a list of tasks",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Create task",
        "parameters": [
          {
            "name": "create_task",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "title",
                "description"
              ],
              "properties": {
                "description": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Task was created"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get task by id",
        "produces": [
          "application/json"
        ],
        "summary": "Return task by id",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Delete task by id",
        "responses": {
          "204": {
            "description": "Task was deleted"
          },
          "404": {
            "description": "Task was not found",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "summary": "Update task by id",
        "parameters": [
          {
            "name": "update_task",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "title",
                "description"
              ],
              "properties": {
                "description": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Task was updated",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "Task was not found",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "parameters": [
        {
          "minimum": 1,
          "type": "string",
          "description": "The user ID.",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "LoginSuccess": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-timr"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "password": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
